generator client {
  provider = "prisma-client-js"
}

// DB Connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Roles
enum Role {
  ADMIN
  USER
}

// Media Enum 
enum MediaType {
  IMAGE
  VIDEO
}

// Users
model User {
  id                   String    @id @default(uuid())
  firstName            String
  lastName             String
  email                String    @unique
  username             String    @unique
  password             String
  role                 Role      @default(USER)
  posts                Post[]
  resetPasswordToken   String?
  resetPasswordExpires DateTime? @default(now())
  comments             Comment[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Post {
  id          String       @id @default(uuid())
  title       String
  description String
  images      PostImages[]
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  categories  Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?
  comments    Comment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model PostImages {
  id     String @id @default(uuid())
  url    String
  postId String
  post   Post   @relation(fields: [postId], references: [id])
}

model Category {
  id        String   @id @default(uuid())
  name      String
  image     String
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id          String    @id @default(uuid())
  description String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  post        Post      @relation(fields: [postId], references: [id])
  postId      String
  parent      Comment?  @relation("parentTochild", fields: [parentId], references: [id])
  parentId    String?
  replies     Comment[] @relation("parentTochild")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
